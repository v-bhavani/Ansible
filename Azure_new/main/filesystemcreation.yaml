- name: Playbook for multiple filesystem creations
  hosts: all
  become: true
  vars_files:
    - fscreationvariable.yaml
  tasks:
    - name: Process each filesystem configuration
      block:
        - name: Display device contents
          shell: "ls -ll /dev/disk/azure/scsi1/lun{{ item.lun }} | awk '{print $11}' | cut -d '/' -f 4-"
          register: command_output
          changed_when: false
          loop: "{{ fs_vars }}"
          loop_control:
            label: "{{ item.vg_name }}"

        - name: Install lvm2 dependency
          package:
            name: lvm2
            state: present

        - name: Create volume group
          lvg:
            vg: "{{ item.vg_name }}"
            pvs: "/dev/{{ hostvars[inventory_hostname]['command_output']['results'][item_index]['stdout'] }}"
            pesize: 16
          loop: "{{ fs_vars }}"
          loop_control:
            label: "{{ item.vg_name }}"
            index_var: item_index

        - name: Create logical volume
          lvol:
            vg: "{{ item.vg_name }}"
            lv: "{{ item.lv_name }}"
            size: "{{ item.size }}"
            force: yes
          loop: "{{ fs_vars }}"
          loop_control:
            label: "{{ item.vg_name }}"

        - name: Create directory mountpoint if it does not exist
          file:
            path: "{{ item.dir }}"
            state: directory
            mode: '0777'
          loop: "{{ fs_vars }}"
          loop_control:
            label: "{{ item.vg_name }}"

        - name: Format the filesystem
          filesystem:
            fstype: "{{ item.ftype }}"
            dev: "/dev/{{ item.vg_name }}/{{ item.lv_name }}"
          loop: "{{ fs_vars }}"
          loop_control:
            label: "{{ item.vg_name }}"

        - name: Mount the logical volume on mountpoint
          mount:
            src: "/dev/{{ item.vg_name }}/{{ item.lv_name }}"
            fstype: "{{ item.ftype }}"
            state: mounted
            path: "{{ item.dir }}"
          loop: "{{ fs_vars }}"
          loop_control:
            label: "{{ item.vg_name }}"
